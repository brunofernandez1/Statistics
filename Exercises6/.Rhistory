#values[1:5]
#nach einem Wert in Liste suchen
#grep("6", values)
#loop um jedes Element in liste zu durchsuchen
for (i in 1:1000) {
temp = grep("6", values[1:i])
#print(temp)
counterallelem[[i]] <- length(values[1:i])
counterall6[[i]] <- length(temp)
#print(countelem)
}
#counterallelem
#counterall6
plot(counterallelem, counterall6, type = "h", xlab="Anzahl Würfe", ylab="Absolute Wahrscheinlichkeit", main="Anzahl Würfe")
plot(counterallelem, counterall6/counterallelem, type = "l", xlab="Anzahl Würfe", ylab="bedingte Wahrscheinlichkeit", main="Anzahl Würfe")
for (i in 1:100000){
dates[i,] <- sample (365, 23, replace=TRUE)
}
knitr::opts_chunk$set(echo = TRUE)
runif(5)
sample (100, 10, replace=FALSE)
set.seed(13)
sample (100, 10, replace=FALSE)
set.seed(17)
sample (6, 100, replace=TRUE)
set.seed(17)
sample (6, 100, replace=TRUE)
sample (6, 100, replace=TRUE)
sample (6, 100, replace=TRUE)
values = sample (6, 1000, replace=TRUE)
#alle values printen
#values
#values von 1-5 in liste printen
#values[1:5]
#nach einem Wert in Liste suchen
#grep("6", values)
#loop um jedes Element in liste zu durchsuchen
for (i in 1:1000) {
temp = grep("6", values[1:i])
#print(temp)
counterallelem[[i]] <- length(values[1:i])
counterall6[[i]] <- length(temp)
#print(countelem)
}
#counterallelem
#counterall6
plot(counterallelem, counterall6, type = "h", xlab="Anzahl Würfe", ylab="Absolute Wahrscheinlichkeit", main="Anzahl Würfe")
plot(counterallelem, counterall6/counterallelem, type = "l", xlab="Anzahl Würfe", ylab="bedingte Wahrscheinlichkeit", main="Anzahl Würfe")
dates=data.frame("a"=1, "b"=1)
for (i in 1:100000){
dates[i,] <- sample (365, 23, replace=TRUE)
}
dates=data.frame("a"=1, "b"=23)
for (i in 1:100000){
dates[i,] <- c(i, sample (365, 23, replace=TRUE))
}
dates=data.frame("a"=1, "b"=23)
for (i in 1:10){
dates[i,] <- c(i, sample (365, 23, replace=TRUE))
}
dates
help sample
help() sample
help("sample")
knitr::opts_chunk$set(echo = TRUE)
runif(5)
sample (100, 10, replace=FALSE)
set.seed(13)
sample (100, 10, replace=FALSE)
set.seed(17)
sample (6, 100, replace=TRUE)
set.seed(17)
sample (6, 100, replace=TRUE)
sample (6, 100, replace=TRUE)
sample (6, 100, replace=TRUE)
values = sample (6, 1000, replace=TRUE)
#alle values printen
#values
#values von 1-5 in liste printen
#values[1:5]
#nach einem Wert in Liste suchen
#grep("6", values)
#loop um jedes Element in liste zu durchsuchen
for (i in 1:1000) {
temp = grep("6", values[1:i])
#print(temp)
counterallelem[[i]] <- length(values[1:i])
counterall6[[i]] <- length(temp)
#print(countelem)
}
#counterallelem
#counterall6
plot(counterallelem, counterall6, type = "h", xlab="Anzahl Würfe", ylab="Absolute Wahrscheinlichkeit", main="Anzahl Würfe")
plot(counterallelem, counterall6/counterallelem, type = "l", xlab="Anzahl Würfe", ylab="bedingte Wahrscheinlichkeit", main="Anzahl Würfe")
dates=data.frame("a"=1, "b"=23)
for (i in 1:10){
dates[i,] <- c(i, sample (x=365, size=23, replace=TRUE))
}
dates
dates=data.frame("a"=1, "b"=23)
for (i in 1:10){
dates[i,] <- c(i, sample (x=365, size=23, replace=TRUE))
}
dates
dates=data.frame("a"=1, "b"=23)
for (i in 1:10){
dates[i,] <- c(i, sample (x=365, size=23, replace=TRUE))
}
sample (x=365, size=23, replace=TRUE)
knitr::opts_chunk$set(echo = TRUE)
runif(5)
sample (100, 10, replace=FALSE)
set.seed(13)
sample (100, 10, replace=FALSE)
set.seed(17)
sample (6, 100, replace=TRUE)
set.seed(17)
sample (6, 100, replace=TRUE)
sample (6, 100, replace=TRUE)
sample (6, 100, replace=TRUE)
values = sample (6, 1000, replace=TRUE)
#alle values printen
#values
#values von 1-5 in liste printen
#values[1:5]
#nach einem Wert in Liste suchen
#grep("6", values)
#loop um jedes Element in liste zu durchsuchen
for (i in 1:1000) {
temp = grep("6", values[1:i])
#print(temp)
counterallelem[[i]] <- length(values[1:i])
counterall6[[i]] <- length(temp)
#print(countelem)
}
#counterallelem
#counterall6
plot(counterallelem, counterall6, type = "h", xlab="Anzahl Würfe", ylab="Absolute Wahrscheinlichkeit", main="Anzahl Würfe")
plot(counterallelem, counterall6/counterallelem, type = "l", xlab="Anzahl Würfe", ylab="bedingte Wahrscheinlichkeit", main="Anzahl Würfe")
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE)
}
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE)
}
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
dates
knitr::opts_chunk$set(echo = TRUE)
runif(5)
sample (100, 10, replace=FALSE)
set.seed(13)
sample (100, 10, replace=FALSE)
set.seed(17)
sample (6, 100, replace=TRUE)
set.seed(17)
sample (6, 100, replace=TRUE)
sample (6, 100, replace=TRUE)
sample (6, 100, replace=TRUE)
values = sample (6, 1000, replace=TRUE)
#alle values printen
#values
#values von 1-5 in liste printen
#values[1:5]
#nach einem Wert in Liste suchen
#grep("6", values)
#loop um jedes Element in liste zu durchsuchen
for (i in 1:1000) {
temp = grep("6", values[1:i])
#print(temp)
counterallelem[[i]] <- length(values[1:i])
counterall6[[i]] <- length(temp)
#print(countelem)
}
#counterallelem
#counterall6
plot(counterallelem, counterall6, type = "h", xlab="Anzahl Würfe", ylab="Absolute Wahrscheinlichkeit", main="Anzahl Würfe")
plot(counterallelem, counterall6/counterallelem, type = "l", xlab="Anzahl Würfe", ylab="bedingte Wahrscheinlichkeit", main="Anzahl Würfe")
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
length(unique(dates))
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
dates
length(unique(dates))
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
length(unique(dates))
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
length(unique(dates))
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
length(unique(dates))
print("Die Wahrscheinlichkeit ist ca", length(unique(dates))/365)
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
length(unique(dates))
print("Die Wahrscheinlichkeit ist ca", (length(unique(dates))/365)
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
length(unique(dates))
print("Die Wahrscheinlichkeit ist ca", (length(unique(dates))/365))
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
length(unique(dates))
print("Die Wahrscheinlichkeit ist ca" (length(unique(dates))/365))
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
length(unique(dates))
print("Die Wahrscheinlichkeit ist ca" length(unique(dates))/365)
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
length(unique(dates))
print("Die Wahrscheinlichkeit ist ca")
print(length(unique(dates))/365)
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
length(unique(dates))
#Wahrscheinlichkeit, dass sich ein Wert wiederholt:
probability= 1-length(unique(dates))/365
print("Die Wahrscheinlichkeit ist ca", probability)
print(length(unique(dates))/365)
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
length(unique(dates))
#Wahrscheinlichkeit, dass sich ein Wert wiederholt:
probability= 1-length(unique(dates))/365
print("Die Wahrscheinlichkeit ist ca:")
print(1-length(unique(dates))/365)
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
length(unique(dates))
#Wahrscheinlichkeit, dass sich ein Wert wiederholt:
probability= 1-length(unique(dates))/365
print("Die Wahrscheinlichkeit ist ca:")
print(1-length(unique(dates))/365)
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
length(unique(dates))
#Wahrscheinlichkeit, dass sich ein Wert wiederholt:
probability= 1-length(unique(dates))/365
print("Die Wahrscheinlichkeit ist ca:")
print(1-length(unique(dates))/365)
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
length(unique(dates))
#Wahrscheinlichkeit, dass sich ein Wert wiederholt:
probability= 1-length(unique(dates))/365
print("Die Wahrscheinlichkeit ist ca:")
print(1-length(unique(dates))/365)
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
length(unique(dates))
#Wahrscheinlichkeit, dass sich ein Wert wiederholt:
probability= 1-length(unique(dates))/365
print("Die Wahrscheinlichkeit ist ca:")
print(1-length(unique(dates))/365)
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
length(unique(dates))
#Wahrscheinlichkeit, dass sich ein Wert wiederholt:
probability= 1-length(unique(dates))/365
print("Die Wahrscheinlichkeit ist ca:")
print(1-length(unique(dates))/365)
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:100000){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:1000){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
length(unique(dates))
#Wahrscheinlichkeit, dass sich ein Wert wiederholt:
probability= 1-length(unique(dates))/365
print("Die Wahrscheinlichkeit ist ca:")
print(1-length(unique(dates))/365)
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10000){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
length(unique(dates))
#Wahrscheinlichkeit, dass sich ein Wert wiederholt:
probability= 1-length(unique(dates))/365
print("Die Wahrscheinlichkeit ist ca:")
print(1-length(unique(dates))/365)
#dates=data.frame("a"=1, "b"=23)
dates <- list()
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
length(unique(dates))
#Wahrscheinlichkeit, dass sich ein Wert wiederholt:
probability= 1-length(unique(dates))/365
print("Die Wahrscheinlichkeit ist ca:")
print(1-length(unique(dates))/365)
#dates=data.frame("a"=1, "b"=23)
dates <- list()
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
length(unique(dates))
#Wahrscheinlichkeit, dass sich ein Wert wiederholt:
probability= 1-length(unique(dates))/365
print("Die Wahrscheinlichkeit ist ca:")
print(1-length(unique(dates))/365)
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:10){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
length(unique(dates))
#Wahrscheinlichkeit, dass sich ein Wert wiederholt:
probability= 1-length(unique(dates))/365
print("Die Wahrscheinlichkeit ist ca:")
print(1-length(unique(dates))/365)
#dates=data.frame("a"=1, "b"=23)
dates <- list()
for (i in 1:100){
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
length(unique(dates))
#Wahrscheinlichkeit, dass sich ein Wert wiederholt:
probability= 1-length(unique(dates))/365
print("Die Wahrscheinlichkeit ist ca:")
print(1-length(unique(dates))/365)
#dates=data.frame("a"=1, "b"=23)
for (i in 1:10){
dates <- list()
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
#Wahrscheinlichkeit, dass sich ein Wert wiederholt:
probability= 1-length(unique(dates))/365
print("Die Wahrscheinlichkeit ist ca:")
print(1-length(unique(dates))/365)
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
#length(unique(dates))
#dates=data.frame("a"=1, "b"=23)
for (i in 1:10){
dates <- list()
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
#Wahrscheinlichkeit, dass sich ein Wert wiederholt:
probability= length(unique(dates))/365
print("Die Wahrscheinlichkeit ist ca:")
print(length(unique(dates))/365)
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
#length(unique(dates))
#dates=data.frame("a"=1, "b"=23)
for (i in 1:10){
dates <- list()
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
#Wahrscheinlichkeit, dass sich ein Wert wiederholt:
probability= length(unique(dates))/365
print("Die Wahrscheinlichkeit ist ca:")
print(length(unique(dates))/365)
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
#length(unique(dates))
#dates=data.frame("a"=1, "b"=23)
for (i in 1:10){
dates <- list()
dates <- append(dates, sample (x=365, size=23, replace=TRUE))
#Wahrscheinlichkeit, dass sich ein Wert wiederholt:
probability= length(unique(dates))/365
print("Die Wahrscheinlichkeit ist ca:")
print(length(unique(dates))/365)
}
#dates
#Anzahl einmalige Elemente welche sich in der Liste befinden
#length(unique(dates))
dunif_discrete <-function(x, min=0, max=1) {
ifelse(x>=min & x<=max & round(x)==x, 1/(max-min+1), 0)
}
punif_discrete <-function(q, min=0, max=1) {
ifelse(q<min, 0, ifelse(q>=max, 1, (floor(q)-min+1)/(max-min+1)))
}
dunif_discrete(x = 4, min = 1, max = 6)
punif_discrete(x = 4, min = 1, max = 6)
dunif_discrete <-function(x, min=0, max=1) {
ifelse(x>=min & x<=max & round(x)==x, 1/(max-min+1), 0)
}
punif_discrete <-function(q, min=0, max=1) {
ifelse(q<min, 0, ifelse(q>=max, 1, (floor(q)-min+1)/(max-min+1)))
}
dunif_discrete(x = 4, min = 1, max = 6)
punif_discrete(x = 4, min = 1, max = 6)
dunif_discrete <-function(x, min=0, max=1) {
ifelse(x>=min & x<=max & round(x)==x, 1/(max-min+1), 0)
}
punif_discrete <-function(q, min=0, max=1) {
ifelse(q<min, 0, ifelse(q>=max, 1, (floor(q)-min+1)/(max-min+1)))
}
dunif_discrete(x = 4, min = 1, max = 6)
punif_discrete(q = 4, min = 1, max = 6)
rbinom(n= 1:12, size=3, prob=0.6)
rbinom(n= 1:12, size=3, prob=0.6)
rbinom(n= 1:12, size=3, prob=0.6)
rbinom(n= 1:12, size=3, prob=0.6)
rbinom(n= 1:12, size=3, prob=0.6)
rbinom(n= 1:12, size=3, prob=0.6)
rbinom(n= 1:12, size=3, prob=0.6)
rbinom(n= 1:12, size=3, prob=0.6)
rbinom(n= 1:12, size=3, prob=0.6)
pbinom(q= 1, size=3, prob=0.6)
pbinom(q= 1, size=3, prob=0.6)
pbinom(q= 1, size=3, prob=0.6)
dbinom(x= 3, size=3, prob=0.6)
pbinom(q= 3 size=3, prob=0.6)
pbinom(q= 3, size=3, prob=0.6)
